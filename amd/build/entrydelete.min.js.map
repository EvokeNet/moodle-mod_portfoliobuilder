{"version":3,"file":"entrydelete.min.js","sources":["../src/entrydelete.js"],"sourcesContent":["/**\n * Delete entry js logic.\n *\n * @copyright  2023 World Bank Group <https://worldbank.org>\n * @author     Willian Mano <willianmanoaraujo@gmail.com>\n */\n\ndefine(['jquery', 'core/ajax', 'core/str', 'mod_portfoliobuilder/sweetalert'], function($, Ajax, Str, Swal) {\n    var STRINGS = {\n        CONFIRM_TITLE: 'Are you sure?',\n        CONFIRM_MSG: 'Once deleted, the item cannot be recovered!',\n        CONFIRM_YES: 'Yes, delete it!',\n        CONFIRM_NO: 'Cancel',\n        SUCCESS: 'Entry successfully deleted.'\n    };\n\n    var componentStrings = [\n        {\n            key: 'entrydelete_confirm_title',\n            component: 'mod_portfoliobuilder'\n        },\n        {\n            key: 'entrydelete_confirm_msg',\n            component: 'mod_portfoliobuilder'\n        },\n        {\n            key: 'entrydelete_confirm_yes',\n            component: 'mod_portfoliobuilder'\n        },\n        {\n            key: 'entrydelete_confirm_no',\n            component: 'mod_portfoliobuilder'\n        },\n        {\n            key: 'entrydelete_success',\n            component: 'mod_portfoliobuilder'\n        },\n    ];\n\n    var EntryDelete = function() {\n        this.getStrings();\n\n        this.registerEventListeners();\n    };\n\n    EntryDelete.prototype.getStrings = function() {\n        var stringsPromise = Str.get_strings(componentStrings);\n\n        $.when(stringsPromise).done(function(strings) {\n            STRINGS.CONFIRM_TITLE = strings[0];\n            STRINGS.CONFIRM_MSG = strings[1];\n            STRINGS.CONFIRM_YES = strings[2];\n            STRINGS.CONFIRM_NO = strings[3];\n            STRINGS.SUCCESS = strings[4];\n        });\n    };\n\n    EntryDelete.prototype.registerEventListeners = function() {\n        $(\"body\").on(\"click\", \".delete-portfoliobuilder-entry\", function(event) {\n            event.preventDefault();\n\n            var eventTarget = $(event.currentTarget);\n\n            Swal.fire({\n                title: STRINGS.CONFIRM_TITLE,\n                text: STRINGS.CONFIRM_MSG,\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: STRINGS.CONFIRM_YES,\n                cancelButtonText: STRINGS.CONFIRM_NO\n            }).then(function(result) {\n                if (result.value) {\n                    this.deleteEntryItem(eventTarget);\n                }\n            }.bind(this));\n        }.bind(this));\n    };\n\n    EntryDelete.prototype.deleteEntryItem = function(eventTarget) {\n        var request = Ajax.call([{\n            methodname: 'mod_portfoliobuilder_entrydelete',\n            args: {\n                id: eventTarget.data('id')\n            }\n        }]);\n\n        request[0].done(function() {\n            window.location.reload();\n        }.bind(this)).fail(function(error) {\n            var message = error.message;\n\n            if (!message) {\n                message = error.error;\n            }\n            this.showToast('error', message);\n        }.bind(this));\n    };\n\n    EntryDelete.prototype.showToast = function(type, message) {\n        var Toast = Swal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 8000,\n            timerProgressBar: true,\n            onOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer);\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\n            }\n        });\n\n        Toast.fire({\n            icon: type,\n            title: message\n        });\n    };\n\n    return {\n        'init': function() {\n            return new EntryDelete();\n        }\n    };\n});"],"names":["define","$","Ajax","Str","Swal","STRINGS","CONFIRM_TITLE","CONFIRM_MSG","CONFIRM_YES","CONFIRM_NO","SUCCESS","componentStrings","key","component","EntryDelete","getStrings","registerEventListeners","prototype","stringsPromise","get_strings","when","done","strings","on","event","preventDefault","eventTarget","currentTarget","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","deleteEntryItem","bind","this","call","methodname","args","id","data","window","location","reload","fail","error","message","showToast","type","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer"],"mappings":"AAOAA,0CAAO,CAAC,SAAU,YAAa,WAAY,oCAAoC,SAASC,EAAGC,KAAMC,IAAKC,UAC9FC,QAAU,CACVC,cAAe,gBACfC,YAAa,8CACbC,YAAa,kBACbC,WAAY,SACZC,QAAS,+BAGTC,iBAAmB,CACnB,CACIC,IAAK,4BACLC,UAAW,wBAEf,CACID,IAAK,0BACLC,UAAW,wBAEf,CACID,IAAK,0BACLC,UAAW,wBAEf,CACID,IAAK,yBACLC,UAAW,wBAEf,CACID,IAAK,sBACLC,UAAW,yBAIfC,YAAc,gBACTC,kBAEAC,iCAGTF,YAAYG,UAAUF,WAAa,eAC3BG,eAAiBf,IAAIgB,YAAYR,kBAErCV,EAAEmB,KAAKF,gBAAgBG,MAAK,SAASC,SACjCjB,QAAQC,cAAgBgB,QAAQ,GAChCjB,QAAQE,YAAce,QAAQ,GAC9BjB,QAAQG,YAAcc,QAAQ,GAC9BjB,QAAQI,WAAaa,QAAQ,GAC7BjB,QAAQK,QAAUY,QAAQ,OAIlCR,YAAYG,UAAUD,uBAAyB,WAC3Cf,EAAE,QAAQsB,GAAG,QAAS,iCAAkC,SAASC,OAC7DA,MAAMC,qBAEFC,YAAczB,EAAEuB,MAAMG,eAE1BvB,KAAKwB,KAAK,CACNC,MAAOxB,QAAQC,cACfwB,KAAMzB,QAAQE,YACdwB,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB9B,QAAQG,YAC3B4B,iBAAkB/B,QAAQI,aAC3B4B,KAAK,SAASC,QACTA,OAAOC,YACFC,gBAAgBd,cAE3Be,KAAKC,QACTD,KAAKC,QAGX5B,YAAYG,UAAUuB,gBAAkB,SAASd,aAC/BxB,KAAKyC,KAAK,CAAC,CACrBC,WAAY,mCACZC,KAAM,CACFC,GAAIpB,YAAYqB,KAAK,UAIrB,GAAG1B,KAAK,WACZ2B,OAAOC,SAASC,UAClBT,KAAKC,OAAOS,KAAK,SAASC,WACpBC,QAAUD,MAAMC,QAEfA,UACDA,QAAUD,MAAMA,YAEfE,UAAU,QAASD,UAC1BZ,KAAKC,QAGX5B,YAAYG,UAAUqC,UAAY,SAASC,KAAMF,SACjCjD,KAAKoD,MAAM,CACnBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,OAASL,QACLA,MAAMM,iBAAiB,aAAc3D,KAAK4D,WAC1CP,MAAMM,iBAAiB,aAAc3D,KAAK6D,gBAI5CrC,KAAK,CACPG,KAAMwB,KACN1B,MAAOwB,WAIR,MACK,kBACG,IAAIvC"}